---
# Установка ETCD
- name: Download and install etcd
  when: inventory_hostname in groups ["etcd"]
  block:
    # Скачивание ETCD
    - name: Download image
      ansible.builtin.get_url:
        url: "https://github.com/etcd-io/etcd/releases/download/{{ etcd_version }}/etcd-{{ etcd_version }}-linux-amd64.tar.gz"
        dest: "/tmp"
        validate_certs: false
        timeout: 15
        mode: "0766"
    # Разахивируем скаченные архивы
    - name: Untar file
      become: true
      ansible.builtin.unarchive:
        src: "/tmp/etcd-{{ etcd_version }}-linux-amd64.tar.gz"
        dest: "/tmp"
        remote_src: true
        owner: root
        group: root
    # Сбор всех бинарников
    - name: Find etcd files
      ansible.builtin.find:
        paths: "/tmp/etcd-{{ etcd_version }}-linux-amd64"
        patterns: "etcd*"
      register: "etcd_src_files"
    # Прокидывание бинарника
    - name: Move to /usr/bin/
      become: true
      ansible.builtin.copy:
        src: "{{ item.path }}"
        dest: /usr/bin
        mode: "0755"
        remote_src: true
      with_items:
        - "{{ etcd_src_files.files }}"

# Создание пользователя и группы для ETCD
- name: Create user and group
  when: inventory_hostname in groups ["etcd"]
  block:
  # Создание группы для etcd
    - name: Create group for etcd
      become: true
      ansible.builtin.group:
        name: etcd
        state: present
        system: true

    # Создание пользователя etcd
    - name: Create etcd user
      become: true
      ansible.builtin.user:
        name: etcd
        groups: etcd
        append: true
        shell: /usr/sbin/nologin
        system: true
        createhome: false
        home: /

# Создание директорий etcd
- name: Create etcd direcroties
  when: inventory_hostname in groups ["etcd"]
  block:
    # Создание директории для конфигурации
    - name: Create directory for config
      become: true
      ansible.builtin.file:
        path: "{{ etcd_folder_path }}"
        state: directory
        mode: "0755"
        owner: etcd
        group: etcd

    # Создание хранилища etcd
    - name: Create directory for data
      become: true
      ansible.builtin.file:
        path: "{{ etcd_data_path }}"
        state: directory
        mode: "0755"
        owner: etcd
        group: etcd

# Конфигурация etcd
- name: Config etcd
  when: inventory_hostname in groups ["etcd"]
  block:
    # Копирование конфигурации etcd
    - name: Copy etcd config
      become: true
      ansible.builtin.template:
        src: etcd.yml.j2
        dest: "{{ etcd_config_file }}"
        owner: etcd
        group: etcd
        mode: "0644"
      notify:
        - Restart etcd

    # Копирование файла переменных окружения etcd
    - name: Copy etcd environment file
      become: true
      ansible.builtin.template:
        src: etcd.j2
        dest: "{{ etcd_environment_file }}"
        owner: etcd
        group: etcd
        mode: "0644"
      notify:
        - Restart etcd
  ###

# Копирование конфигурации сервиса
- name: Copy etcd service
  become: true
  ansible.builtin.template:
    src: etcd.service.j2
    dest: /etc/systemd/system/etcd.service
    owner: root
    group: root
    mode: "0644"
  notify:
    - Daemon-reload
    - Restart etcd
    
# Остановка сервиса etcd
- name: Stopped etcd
  become: true
  ansible.builtin.systemd:
    name: etcd
    state: stopped
    enabled: true
    daemon_reload: true
  tags: ["etcd_stop"]

# Удаление существующего кластера
- name: Remove existing etcd db
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ etcd_data_path }}"


- name: Flush handlers
  ansible.builtin.meta: flush_handlers

# Запуск сервиса etcd
- name: Start etcd
  become: true
  ansible.builtin.systemd:
    name: etcd
    state: started
    enabled: true
